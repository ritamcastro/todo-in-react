name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # # 1. Run unit tests
  # unit-tests:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: frontend
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #         cache-dependency-path: frontend/package-lock.json

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run unit tests
  #       run: npm test -- --ci --reporter=junit

  # 2. Build & deploy frontend to GitHub Pages
  build-and-deploy:
    # needs: unit-tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # # 3. Run E2E tests against deployed site
  # e2e-tests:
  #   needs: build-and-deploy
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: e2e
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #         cache-dependency-path: e2e/package-lock.json

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Run E2E tests
  #       env:
  #         BASE_URL: ${{ steps.deployment.outputs.page_url }}
  #       run: |
  #         echo "Testing against $BASE_URL"
  #         npm run test:e2e -- --base-url=$BASE_URL
